name: reStructuredPython automated PR Labeling
on:
  issue_comment:
    types: [created]

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  update-labels:
    runs-on: ubuntu-latest
    steps:
      - name: Parse comment and update PR labels
        uses: actions/github-script@v6
        with:
          script: |
            const comment = context.payload.comment.body.trim();
            const prNumber = context.payload.issue.number;
            const labelsToAdd = [];
            const labelsToRemove = [];
            
            // Ensure only recognized status comments trigger changes
            const validPrefixes = [
              "!windows-passing", "!windows-failing",
              "!mac-passing", "!mac-failing",
              "!ubuntu-passing", "!ubuntu-failing"
            ];
            
            if (!validPrefixes.some(prefix => comment.startsWith(prefix))) {
              return; // Ignore unrelated comments
            }
            
            const status = {
              windows: comment.startsWith("!windows-passing"),
              mac: comment.startsWith("!mac-passing"),
              ubuntu: comment.startsWith("!ubuntu-passing")
            };
            
            const allPassing = status.windows && status.mac && status.ubuntu;
            const anyFailing = !status.windows || !status.mac || !status.ubuntu;
            
            if (allPassing) {
              labelsToAdd.push("awaiting merge");
              labelsToRemove.push("DO-NOT-MERGE");
            } else if (anyFailing) {
              labelsToAdd.push("DO-NOT-MERGE");
              labelsToRemove.push("awaiting merge");
            }
            
            // Apply label changes only if necessary
            if (labelsToAdd.length > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                labels: labelsToAdd
              });
            }
            
            for (const label of labelsToRemove) {
              await github.rest.issues.removeLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                name: label
              }).catch(() => {});
            }

