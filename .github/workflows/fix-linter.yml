name: Lint and Fix Python Code

on:
  pull_request:
    branches:
      - main  # Trigger on pull requests to `main`
  workflow_dispatch:

jobs:
  lint-and-fix:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint autopep8

      # Step 4: Run pylint and check for issues
      - name: Run pylint
        id: pylint
        run: |
          pylint_output=$(pylint $(git ls-files '*.py' | grep -vE '(^tests/|^docs/)') --output-format=text) || true
          echo "$pylint_output"
          echo "::set-output name=pylint_output::$pylint_output"

      # Step 5: Apply linter fixes using autopep8
      - name: Apply linter fixes using autopep8
        run: |
          autopep8 --in-place --aggressive --aggressive $(find . -type f -name "*.py" ! -path "./tests/*" ! -path "./docs/*")

      # Step 6: Commit the changes if necessary
      - name: Commit and push fixes or comment on PR
        run: |

          if [[ $GITHUB_EVENT_NAME == 'pull_request' ]]; then
            pylint_output=$(pylint $(find . -type f -name "*.py" ! -path "./tests/*" ! -path "./docs/*") --output-format=text)
            if [[ -n "$pylint_output" ]]; then
              echo "Posting linter issues as PR comment."
              - uses: parkerbxyz/suggest-changes@v1
                with:
                  comment: 'Please commit the suggested changes from autopep8 and pylint.'
                  event: 'REQUEST_CHANGES'
            else
              echo "No linting issues found."
            fi
          fi

          if [[ $GITHUB_EVENT_NAME == 'workflow_dispatch' ]]; then
            git config --global user.name 'github-actions[bot]'
            git config --global user.email 'github-actions[bot]@users.noreply.github.com'

            # Generate a random 8-character string for the branch name
            RANDOM_BRANCH="lint-$(head /dev/urandom | tr -dc A-Za-z0-9 | head -c 8)"
            git checkout -b $RANDOM_BRANCH
            git add .
            git diff --cached --quiet || git commit -m "Auto-fix Linter"
            git push origin $RANDOM_BRANCH
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

  # Step 7: Create PR (only if triggered manually)
  create-pr:
    needs: lint-and-fix
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'  # Only run this if it's a manual trigger
    steps:
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GH_PAT }}
          branch: ${{ needs.lint-and-fix.outputs.random_branch }}  # Random branch created if triggered manually
          base: main
          title: "Auto-fix Linter issues"
          body: "This PR automatically fixes the PEP8 issues detected by pylint."
